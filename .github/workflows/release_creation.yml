name: Release Creation


on:
  workflow_call:
    inputs:
      image_folder: 
        description: 'The folder with the original images'
        required: true
        type: string
      new_image_folder:
        description: 'The folder where the compressed images go'
        required: true
        type: string
      complete_json:
        description: 'Compiled code'
        required: true
        type: string
      json_folder:
        description: 'folder with jsons'
        required: true
        type: string
      images_folder:
        description: 'compressed images'
        required: true
        type: string
      videos_folder:
        description: 'videos folder'
        required: true
        type: string
        
jobs:
  image_resize_and_release:
    name: Image Resize Job
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
     - name: checkout
       uses: actions/checkout@v4
     - name: Install LibVips
       run: sudo apt install libvips-tools
     - name: resize jpeg images
       run:  |
         IMAGE_FOLDER=${{ inputs.image_folder }}
         NEW_IMAGE_FOLDER=${{ inputs.new_image_folder }}
         vipsthumbnail $IMAGE_FOLDER*.jpeg --size 1300x2600 -o $(readlink -f "$NEW_IMAGE_FOLDER%s.jpeg")
     - name: Create ZIP file of specific folders
       run: |
          COMPLETE_JSON=${{ inputs.complete_json }}
          JSON_FOLDER=${{ inputs.json_folder }}
          IMAGES_FOLDER=${{ inputs.images_folder }}
          VIDEOS_FOLDER=${{ inputs.videos_folder }}
          mkdir artifact
          zip -r artifact/my-release.zip $COMPLETE_JSON $JSON_FOLDER $IMAGES_FOLDER $VIDEOS_FOLDER
     - name: Create GitHub Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub automatically provides this token
       with:
          tag_name: "${{ github.ref_name }}"  # This uses the tag that triggered the workflow
          release_name: "Release ${{ github.run_id }}"
          draft: false
          prerelease: false

     - name: Upload ZIP to release
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # URL to upload to the release
          asset_path: artifact/my-release.zip  # Path to the ZIP file
          asset_name: my-release.zip  # Name of the file on GitHub release
          asset_content_type: application/zip

